services:
  nginx:
    image: nginx:alpine
    container_name: portfolio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./portfolio-laravel:/var/www/laravel
      - ./Docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - php
      - nextjs
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    image: certbot/certbot
    container_name: portfolio-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - portfolio-network
    depends_on:
      - nginx

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio-php
    volumes:
      - ./portfolio-laravel:/var/www/laravel
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

  nextjs:
    build:
      context: ./portfolio-next
      dockerfile: Dockerfile
    container_name: portfolio-nextjs
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://mirzaredzic.duckdns.org/api
    networks:
      - portfolio-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: portfolio-mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

networks:
  portfolio-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local